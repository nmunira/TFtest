name: Deploy Appservice

on:
  push:
    branches:
      - main  # Adjust the branch as needed

jobs:
  terraform:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.3  # Adjust the Terraform version as needed
     
    - name: 'Terraform Init'
      env:
          ARM_CLIENT_ID: ${{ secrets.TEST_TF_CLIENTID }}
          ARM_TENANT_ID: ${{ secrets.TEST_TF_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.TEST_TF_SUBSCRIPTION_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TESTTF_VALUE_CLIENTSECRET }}
      run: terraform init
      working-directory: ./terraform  # Adjust if your Terraform files are in a different directory

    - name: 'Terraform Plan'
      env:
          ARM_CLIENT_ID: ${{ secrets.TEST_TF_CLIENTID }}
          ARM_TENANT_ID: ${{ secrets.TEST_TF_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.TEST_TF_SUBSCRIPTION_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TESTTF_VALUE_CLIENTSECRET }}
      run: terraform plan -out=tfplan
      working-directory: ./terraform

    - name: 'Terraform Apply'
      env:
          ARM_CLIENT_ID: ${{ secrets.TEST_TF_CLIENTID }}
          ARM_TENANT_ID: ${{ secrets.TEST_TF_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.TEST_TF_SUBSCRIPTION_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TESTTF_VALUE_CLIENTSECRET }}
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform